import { backInlineBtn } from 'src/general';
import { formatKeyboard } from 'src/libs/common';
import { ChangeToSelectHoursOpts } from '../events-additional.service';

export const selectEventHoursMessage = ({
  type,
}: ChangeToSelectHoursOpts) => `<b>–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è</b>

üïó –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è ${type === 'start' ? '–Ω–∞—á–∞–ª–∞' : '–æ–∫–æ–Ω—á–∞–Ω–∏—è'} —Å–æ–±—ã—Ç–∏—è:`;

export const selectEventHoursMarkup = (
  dateVal: string,
  btns: string[],
  { callbackDataTitle, startTime, type }: ChangeToSelectHoursOpts,
) => {
  const hoursBtns = [];

  for (let btn of btns) {
    hoursBtns.push({
      text: btn,
      callback_data: `${dateVal}-${btn}-${startTime}::${callbackDataTitle}`,
    });
  }

  // —Å–¥–µ–ª–∞—Ç—å –ª–∏–±—É –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏ –≤—ã–≤–æ–¥–∏—Ç—å —á–µ—Ä–µ–∑ –Ω–µ–µ –∫–Ω–æ–ø–∫–∏ –≤—Ä–µ–º–µ–Ω
  // –µ—Å–ª–∏ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—å—à–µ —á–µ–º –º–∞–∫—Å–∏–º—É–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —É–±–∏—Ä–∞—Ç—å —Å—Ç—Ä–µ–ª–æ—á–∫–∏

  return {
    inline_keyboard: [
      ...formatKeyboard(hoursBtns, 5, true),
      [
        {
          text: '‚Ü©Ô∏è –ù–∞–∑–∞–¥',
          callback_data:
            type === 'start'
              ? `${dateVal}::back_to_calendar_date`
              : `${dateVal}::back_to_pers_cal_event_start_time`,
        },
      ],
      backInlineBtn,
    ],
  };
};
